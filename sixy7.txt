In[1]:= type[one_,p_,q_,two_,r_,s_]:=(tmptype=0 IdentityMatrix[6];tmptype=MapAt[one&,tmptype,{p,q}];MapAt[two&,tmptype,{r,s}])
In[2]:= type[1,3,5,9,6,6]//MatrixForm
In[3]:= inv12=IdentityMatrix[6][[{2,1,3,4,5,6}]]
In[4]:= arg=Table[6i+j,{i,6},{j,6}]
In[5]:= orbstep[matrixlist_]:=Union[matrixlist,Dot[inv12,#]&/@matrixlist,Reverse/@matrixlist,Transpose/@matrixlist];
In[6]:= orbit[matrixlist_]:=FixedPoint[orbstep,matrixlist]
orbit gives a union of orbits
In[7]:= MatrixForm/@(FixedPoint[orbstep,{arg}]);
In[8]:= Length[%]
In[9]:= orbitsize[matrixlist_]:=Length[orbit[matrixlist]]
In[10]:= orbitsize[{type[1,1,1,1,6,6]}]
In[11]:= zeroes=0 IdentityMatrix[6];
In[12]:= matrixtuple[tuple_]:=Sum[MapAt[1&,zeroes,tuple[[i]]],{i,Length[tuple]}]
In[13]:= matrixtuple[{{3,2},{4,5}}]//MatrixForm
In[14]:= tuple[matrix_]:=Position[matrix,1]
In[15]:= tuple[%%]
In[16]:= matrixtuple[{{1,1},{2,4}}]+2matrixtuple[{{3,6},{6,5}}]
In[17]:= MatrixForm[%]
In[18]:= tuplepair[matrix_]:={Position[matrix,1],Position[matrix,2]}
In[19]:= tuplepair[%%]
In[20]:= matrixtuplepair[{cells1_,cells2_}]:=matrixtuple[cells1]+2matrixtuple[cells2]
In[21]:= matrixtuplepair[%%]//MatrixForm
In[22]:= orbitsizetuple[tuple_]:=Length[orbit[{matrixtuple[tuple]}]]
In[23]:= orbitsizetuplepair[pair_]:=Length[orbit[{matrixtuple[pair[[1]]]+2matrixtuple[pair[[2]]],2matrixtuple[pair[[1]]]+matrixtuple[pair[[2]]]}]]
In[24]:= Save["counts.txt",{orbitsizetuple,orbitsizetuplepair}]
In[25]:= cellreps={{1,1},{3,1},{3,3}}
In[26]:= orbitsize[Table[matrixtuple[{cellreps[[i]]}],{i,Length[cellreps]}]]
In[27]:= Sum[orbitsize[{matrixtuple[{cellreps[[i]]}]}],{i,Length[cellreps]}]
In[28]:= selectreps[matlist_]:=Block[{keepmats={}},Do[If[IntersectingQ[keepmats,orbit[{matlist[[i]]}]],Null,AppendTo[keepmats,matlist[[i]]]],{i,Length[matlist]}];keepmats]
In[29]:= MatrixForm/@(selectreps[{matrixtuple[{{1,1}}],matrixtuple[{{1,1},{2,4}}],matrixtuple[{{2,4}}],matrixtuple[{{2,5}}]}])
In[30]:= tuple/@(selectreps[{matrixtuple[{{1,1}}],matrixtuple[{{1,1},{2,4}}],matrixtuple[{{2,4}}],matrixtuple[{{2,5}}]}])
In[31]:= matrixtuple[{{1,1},{2,4}}]+2matrixtuple[{{3,6},{6,5}}]//MatrixForm
In[32]:= orbitsizetuplepair[{{{1,1},{2,4}},{{3,6},{6,5}}}]
In[33]:= matrixtuple[{{1,1},{2,4}}]+2matrixtuple[{{3,6},{4,3}}]//MatrixForm
In[34]:= orbitsizetuplepair[{{{1,1},{2,4}},{{3,6},{4,3}}}]
In[35]:= orbitsizetuple[{{1,2},{3,4}}]
In[36]:= orbitsizetuple[{{1,2},{3,4},{5,6}}]
In[37]:= orbitsize[{arg}]
In[38]:= orbitsize[{type[1,1,1,2,6,6]}]
In[39]:= with11={{3,3},{2,4},{3,4},{4,4},{2,5},{3,5},{4,5},{5,5}}
In[40]:= badwith11={{2,3},{1,2},{1,3},{1,4},{1,5},{2,2}}
In[41]:= with31={{2,3},{2,4},{4,4},{4,5}}
In[42]:= badwith31={{4,1},{3,2},{4,2},{3,3},{3,4},{3,5},{4,3},{5,4}}
In[43]:= MapAt[4&,zeroes,with31]+MapAt[1&,zeroes,badwith31]+type[8,3,1,0,1,1]//MatrixForm
In[44]:= orbitsize[{type[1,3,1,0,1,1]}]
In[45]:= MapAt[1&,zeroes,with11]//MatrixForm
In[46]:= MapAt[1&,zeroes,badwith11]//MatrixForm
In[47]:= orbitsize[{type[1,1,1,0,6,6]}]
In[48]:= MapAt[4&,zeroes,with11]+MapAt[1&,zeroes,badwith11]+type[8,1,1,0,1,2]//MatrixForm
In[49]:= orbitsize[{type[1,1,1,0,1,2]}]
In[50]:= MapAt[1&,zeroes,with31]//MatrixForm
In[51]:= MapAt[1&,zeroes,badwith31]//MatrixForm
In[52]:= type[1,1,1,1,Sequence@@(badwith11[[4]])]//MatrixForm
In[53]:= orbitsize[{type[1,1,1,1,Sequence@@(badwith11[[4]])]}]
In[54]:= MatrixForm/@(FixedPoint[orbstep,{type[1,1,1,1,Sequence@@(badwith11[[4]])]}]);
In[55]:= type[1,3,3,1,4,4]//MatrixForm
In[56]:= orbitsize[{type[1,3,3,1,4,4]}]
In[57]:= type[1,3,3,2,4,4]//MatrixForm
In[58]:= orbitsize[{type[1,3,3,2,4,4]}]
In[59]:= type[1,3,3,1,3,4]//MatrixForm
In[60]:= orbitsize[{type[1,3,3,1,3,4]}]
In[61]:= orbitsize[{type[1,3,3,1,4,4]}]+orbitsize[{type[1,3,3,1,3,4]}]+orbitsize[{type[1,3,3,2,4,4]}]+orbitsize[{type[1,3,3,2,3,4]}]
In[62]:= MatrixForm/@{type[1,3,3,1,4,4],type[1,3,3,1,3,4],type[1,3,3,2,4,4],type[1,3,3,2,3,4]}
In[63]:= type[1,3,3,2,3,4]//MatrixForm
In[64]:= orbitsize[{type[1,3,3,2,3,4]}]
In[65]:= MatrixForm/@{type[1,3,3,1,4,4],type[1,3,3,1,3,4],type[1,3,3,2,4,4],type[1,3,3,2,3,4]}
In[66]:= badwith33={{4,4},{3,4}}
In[67]:= cellpairreps=Union[{{1,1},#}&/@with11,{{3,1},#}&/@with31,{{1,1},#}&/@badwith11,{{3,1},#}&/@badwith31,{{3,3},#}&/@badwith33]
In[68]:= goodcellpairreps=Union[{{1,1},#}&/@with11,{{3,1},#}&/@with31]
In[69]:= Length[goodcellpairreps]
In[70]:= Length[cellpairreps]
In[71]:= matpairreps=matrixtuple/@cellpairreps;
In[72]:= Union[Flatten[Table[MemberQ[orbit[{matpairreps[[i]]}],matpairreps[[j]]],{i,Length[matpairreps]},{j,i+1,Length[matpairreps]}]]]
In[73]:= goodmatpairreps=matrixtuple/@goodcellpairreps;
In[74]:= Length[goodmatpairreps]
In[75]:= MatrixForm/@(Table[goodmatpairreps[[i]],{i,Length[goodmatpairreps]}])
In[76]:= MatrixForm/@(Table[matpairreps[[i]],{i,4}])
In[77]:= Length[matpairreps]
In[78]:= Binomial[36,2]
In[79]:= orbitsize[matpairreps]
In[80]:= Sum[orbitsize[{matpairreps[[i]]}],{i,Length[matpairreps]}]
This shows that we found all orbits of pairs. 
Here are the representatives for admissible pairs.
In[81]:= Length[matpairreps]
In[82]:= Length[orbit[matpairreps]]
In[83]:= Length[goodmatpairs=orbit[goodmatpairreps]]
In[84]:= Length[goodcellpairs=tuple/@goodmatpairs]
In[85]:= Length[cellpairs=tuple/@(orbit[matpairreps])]
In[86]:= Length[cellpairreps]
In[87]:= Length[Flatten[Table[Union[cellpairreps[[i]],cellpairs[[j]]],{i,Length[cellpairreps]},{j,Length[cellpairs]}],1]]
In[88]:= %==%% %%%
In[89]:= triples=Union[Flatten[Table[Union[cellpairreps[[i]],cellpairs[[j]]],{i,Length[cellpairreps]},{j,Length[cellpairs]}],1]];
In[90]:= Length[triples]
In[91]:= triples=Select[triples,Length[#]==3&];
In[92]:= Length[triples]
In[93]:= triples[[87]]
In[94]:= cellpairs[[3]]
In[95]:= mattriples=matrixtuple/@triples;
In[96]:= mattriples[[87]]//MatrixForm
In[97]:= orbitsize[mattriples]
In[98]:= Binomial[36,3]
In[99]:= mattriplesreps=selectreps[mattriples];
In[100]:= orbitsize[mattriplesreps]
In[101]:= triplesreps=tuple/@mattriplesreps;
In[102]:= mattriplesreps[[87]]//MatrixForm
In[103]:= triplesreps[[87]]
In[104]:= goodtriples=Union[Flatten[Table[Union[goodcellpairreps[[i]],goodcellpairs[[j]]],{i,Length[goodcellpairreps]},{j,Length[goodcellpairs]}],1]];
In[105]:= Length[goodtriples]
In[106]:= goodtriples=Select[goodtriples,Length[#]==3&];
In[107]:= Length[goodtriples]
In[108]:= goodtriples=Select[goodtriples,MemberQ[goodcellpairs,{#[[1]],#[[2]]}]&&MemberQ[goodcellpairs,{#[[2]],#[[3]]}]&&MemberQ[goodcellpairs,{#[[1]],#[[3]]}]&];
In[109]:= Length[goodtriples]
In[110]:= goodtriples[[87]]
In[111]:= goodmattriples=matrixtuple/@goodtriples;
In[112]:= goodmattriples[[87]]//MatrixForm
In[113]:= Length[goodmattriples]
In[114]:= orbitsize[goodmattriples]
In[115]:= goodmattriplesreps=selectreps[goodmattriples];
In[116]:= orbitsize[goodmattriplesreps]
In[117]:= Sum[orbitsize[{goodmattriplesreps[[i]]}],{i,Length[goodmattriplesreps]}]
In[118]:= goodtriplesreps=tuple/@goodmattriplesreps
In[119]:= Length[goodmattriplesreps]
In[120]:= goodmattriplesreps[[8]]//MatrixForm
In[121]:= goodtriplesreps[[8]]
In[122]:= Length[goodmattriplesreps]
In[123]:= Length[goodtriplesreps]
In[124]:= matrixtuple[goodcellpairreps[[4]]]//MatrixForm
In[125]:= matrixtuple[goodcellpairs[[4]]]//MatrixForm
In[126]:= goodcellpairs=Sort/@goodcellpairs;
In[127]:= Length[goodcellpairs]
In[128]:= Length[Flatten[Table[List[cellpairreps[[i]],cellpairs[[j]]],{i,Length[cellpairreps]},{j,Length[cellpairs]}],1]]
In[129]:= Select[Flatten[Table[List[cellpairreps[[i]],cellpairs[[j]]],{i,Length[cellpairreps]0+20},{j,Length[cellpairs]0+30}],1],Length[Union@@#]==3&]
In[130]:= gooddoubletuples=Select[Flatten[Table[List[goodcellpairreps[[i]],goodcellpairs[[j]]],{i,Length[goodcellpairreps]},{j,Length[goodcellpairs]}],1],Length[Union@@#]==4&];
In[131]:= gooddoubletuples[[34]]
In[132]:= Length[gooddoubletuples]
In[133]:= Reverse[gooddoubletuples[[34]]]
In[134]:= gooddoubletuples=Union[gooddoubletuples,Reverse/@gooddoubletuples];
In[135]:= Length[gooddoubletuples]
In[136]:= matrixtuplepair[gooddoubletuples[[67]]]
In[137]:= goodmatdoubles=matrixtuplepair/@gooddoubletuples;
In[138]:= goodmatdoubles[[56]]
In[139]:= gooddoubletuples[[56]]
In[140]:= matrixtuplepair[%]
In[141]:= orbitsize[goodmatdoubles]
In[142]:= tuplepair[goodmatdoubles[[56]]]
In[143]:= Length[goodmatdoubles]
In[144]:= Length[gooddoubletuples]
In[145]:= Multinomial[36,2,2]
In[146]:= goodmatdoublereps=selectreps[goodmatdoubles];
In[147]:= Length[goodmatdoublereps]
In[148]:= gooddoubletuples=tuplepair/@goodmatdoubles;
In[149]:= gooddoubletuplereps=tuplepair/@goodmatdoublereps;
In[150]:= Length[gooddoubletuplereps]
In[151]:= Sum[orbitsize[{goodmatdoublereps[[i]]}],{i,Length[goodmatdoublereps]}]
In[152]:= coresize=2
In[153]:= stopnumber=0
In[154]:= goodcellpairreps
In[155]:= Save["inputcoresize2.txt",{coresize,goodcellpairreps,stopnumber}] 
In[156]:= coresize=3
In[157]:= goodtriplesreps
In[158]:= Save["inputcoresize3.txt",{coresize,goodtriplesreps,stopnumber}] 
In[159]:= coresize=4
In[160]:= Table[gooddoubletuplereps[[i]],{i,20}]
In[161]:= Save["inputcoresize4.txt",{coresize,gooddoubletuplereps,stopnumber}] 
In[162]:= stuttertwo=Transpose[{cellreps,cellreps}]
In[163]:= coresize=2
In[164]:= Save["inputstutter2.txt",{coresize,stuttertwo,stopnumber}] 
In[165]:= stutterthree=Table[{goodcellpairreps[[i,1]],goodcellpairreps[[i,1]],goodcellpairreps[[i,2]]},{i,Length[goodcellpairreps]}]
In[166]:= coresize=3
In[167]:= Save["inputstutter3.txt",{coresize,stutterthree,stopnumber}] 
In[168]:= ?Global`*